# This will work only on linux runners
name: 🛫 Scrapy deployment

on: [push]

jobs:
  backup:
    name: "1️⃣ Backup scrapy"
    runs-on: self-hosted

    steps:
      - name: 🚚 Get latest code
        uses: actions/checkout@v3

      - name: 🔐 Set privkey
        run: |
          echo "${{ secrets.PRIVATE_KEY_FILE }}" > privkey.pem
          chmod 600 privkey.pem

      - name: 💾 Create backup for scrapy
        run: |
          ssh ${{ secrets.ORACLE_INSTANCE_USER }}@${{ secrets.ORACLE_INSTANCE_IP }} -o StrictHostKeyChecking=no -i privkey.pem "
            cd /home/${{ secrets.ORACLE_INSTANCE_USER }}/ &&
            sudo mkdir -p backups/ &&
            sudo mkdir -p backups/scrapy_$(date +'\%y-\%m-\%d_\%H\%M') &&
            sudo rm -f -r scrapy/.venv/ &&
            sudo mv scrapy/ backups/scrapy_$(date +'\%y-\%m-\%d_\%H\%M') &&
            sudo mkdir -p scrapy/ &&
            sudo chmod 777 scrapy/
          "
  deploy:
    name: "2️⃣ Deploy scrapy"
    runs-on: self-hosted
    needs: backup

    steps:
      - name: ☁️ Upload directory to server
        run: |
          scp -i privkey.pem -o StrictHostKeyChecking=no -r scrapy/ ${{ secrets.ORACLE_INSTANCE_USER }}@${{ secrets.ORACLE_INSTANCE_IP }}:/home/${{ secrets.ORACLE_INSTANCE_USER }}/

      - name: ⛔ Fix permissions
        run: |
          ssh ${{ secrets.ORACLE_INSTANCE_USER }}@${{ secrets.ORACLE_INSTANCE_IP }} -o StrictHostKeyChecking=no -i privkey.pem "
            cd /home/${{ secrets.ORACLE_INSTANCE_USER }}/scrapy/scripts &&
            chmod 770 -R ./
          "

  generate:
    name: "3️⃣ Generate venv"
    runs-on: self-hosted
    needs: deploy

    steps:
      - name: 🛠️ Create a .venv directory
        run: |
          ssh ${{ secrets.ORACLE_INSTANCE_USER }}@${{ secrets.ORACLE_INSTANCE_IP }} -o StrictHostKeyChecking=no -i privkey.pem "
            cd /home/${{ secrets.ORACLE_INSTANCE_USER }}/scrapy &&
            python -m venv .venv &&
            source .venv/bin/activate &&
            pip install --upgrade pip &&
            pip install wheel &&
            pip install -r requirements.txt
          "

  config:
    name: "4️⃣ Configure scrapy"
    runs-on: self-hosted
    needs: deploy

    steps:
      - name: ⚙️ Set bash_profile variables
        run: |
          echo "# .bash_profile

          # Get the aliases and functions
          if [ -f ~/.bashrc ]; then
                  . ~/.bashrc
          fi

          # User specific environment and startup programs
          export EDITOR='nano'
          export SCRAPEDO_KEY='${{ secrets.SCRAPEDO_KEY }}'
          export REDIS_URI='${{ secrets.REDIS_URI }}'
          export MONGO_URI='${{ secrets.MONGO_URI }}'
          export MONGO_DB='${{ secrets.MONGO_DB }}'" > .bash_profile

          scp -i privkey.pem -o StrictHostKeyChecking=no .bash_profile ${{ secrets.ORACLE_INSTANCE_USER }}@${{ secrets.ORACLE_INSTANCE_IP }}:~/.bash_profile

          ssh ${{ secrets.ORACLE_INSTANCE_USER }}@${{ secrets.ORACLE_INSTANCE_IP }} -o StrictHostKeyChecking=no -i privkey.pem 'source ~/.bashrc'

      - name: ⏲️ Set crontab
        run: |
          cat > crontab_scrapy <<'EOF'
          SHELL=/bin/bash

          # Move log
          10 8 * * * cd /home/${{ secrets.ORACLE_INSTANCE_USER }}/scrapy/ && mkdir -p logs && mv scrapy.log "logs/scrapy_$(date +'\%d-\%m-\%y_\%H\%M').log"

          # Get sitemap
          15 8 * * * /home/${{ secrets.ORACLE_INSTANCE_USER }}/scrapy/scripts/run_sitemap_emag.sh
          20 8 * * * /home/${{ secrets.ORACLE_INSTANCE_USER }}/scrapy/scripts/run_sitemap_altex.sh

          # Get products
          25 8 * * * /home/${{ secrets.ORACLE_INSTANCE_USER }}/scrapy/scripts/run_products_emag.sh
          30 8 * * * /home/${{ secrets.ORACLE_INSTANCE_USER }}/scrapy/scripts/run_products_altex.sh

          # Get failed products x1
          25 15 * * * /home/${{ secrets.ORACLE_INSTANCE_USER }}/scrapy/scripts/run_failed_urls.sh
          30 15 * * * /home/${{ secrets.ORACLE_INSTANCE_USER }}/scrapy/scripts/run_products_emag.sh
          35 15 * * * /home/${{ secrets.ORACLE_INSTANCE_USER }}/scrapy/scripts/run_products_altex.sh

          # Get failed products x2
          25 22 * * * /home/${{ secrets.ORACLE_INSTANCE_USER }}/scrapy/scripts/run_failed_urls.sh
          35 22 * * * /home/${{ secrets.ORACLE_INSTANCE_USER }}/scrapy/scripts/run_products_emag.sh
          40 22 * * * /home/${{ secrets.ORACLE_INSTANCE_USER }}/scrapy/scripts/run_products_altex.sh
          EOF

          scp -i privkey.pem -o StrictHostKeyChecking=no crontab_scrapy ${{ secrets.ORACLE_INSTANCE_USER }}@${{ secrets.ORACLE_INSTANCE_IP }}:/home/${{ secrets.ORACLE_INSTANCE_USER }}/
          ssh ${{ secrets.ORACLE_INSTANCE_USER }}@${{ secrets.ORACLE_INSTANCE_IP }} -o StrictHostKeyChecking=no -i privkey.pem 'crontab /home/${{ secrets.ORACLE_INSTANCE_USER }}/crontab_scrapy'

      - name: 🧹 Cleanup
        run: |
          ssh ${{ secrets.ORACLE_INSTANCE_USER }}@${{ secrets.ORACLE_INSTANCE_IP }} -o StrictHostKeyChecking=no -i privkey.pem 'rm /home/${{ secrets.ORACLE_INSTANCE_USER }}/crontab_scrapy'
